+==============================================================================+



                               /$$$$$$            /$$

                              /$$__  $$          | $$

           /$$$$$$$  /$$$$$$ | $$  \__//$$$$$$  /$$$$$$   /$$   /$$

          /$$_____/ |____  $$| $$$$   /$$__  $$|_  $$_/  | $$  | $$

         |  $$$$$$   /$$$$$$$| $$_/  | $$$$$$$$  | $$    | $$  | $$

          \____  $$ /$$__  $$| $$    | $$_____/  | $$ /$$| $$  | $$

          /$$$$$$$/|  $$$$$$$| $$    |  $$$$$$$  |  $$$$/|  $$$$$$$

         |_______/  \_______/|__/     \_______/   \___/   \____  $$

                                                          /$$  | $$

                                                         |  $$$$$$/

  by pyup.io                                              \______/



+==============================================================================+



 [1mREPORT[0m 



[31m[22m  Safety is using PyUp's free open-source vulnerability database. This

data is 30 days old and limited. [0m

[31m  For real-time enhanced vulnerability data, fix recommendations, severity

reporting, cybersecurity support, team and project policy management and more

sign up at https://pyup.io or email sales@pyup.io[0m



  Safety [1mv2.3.5[0m is scanning for [1mVulnerabilities[0m[1m...[0m

[1m  Scanning dependencies[0m in your [1menvironment:[0m



  -> /usr/lib/python3/dist-packages

  -> /usr/local/lib/python3.10/dist-packages

  -> /home/otavio/.local/lib/python3.10/site-packages



  Using [1mnon-commercial database[0m

[1m  Found and scanned 124 packages[0m

  Timestamp [1m2023-11-27 17:33:04[0m

[1m  17[0m[1m vulnerabilities found[0m

[1m  0[0m[1m vulnerabilities ignored[0m



+==============================================================================+

 [31m[1mVULNERABILITIES FOUND[0m 

+==============================================================================+



[31m-> Vulnerability found in certifi version 2020.6.20

[0m[1m   Vulnerability ID: [0m52365

[1m   Affected spec: [0m<2022.12.07

[1m   ADVISORY: [0mCertifi 2022.12.07 includes a fix for CVE-2022-23491:

   Certifi 2022.12.07 removes root certificates from "TrustCor" from the root

   store. These are in the process of being removed from Mozilla's trust store.

   TrustCor's root certificates are being removed pursuant to an investigation

   prompted by media reporting that TrustCor's ownership also operated a

   business that produced spyware. Conclusions of Mozilla's investigation can be

   found in the linked google group

   discussion.https://github.com/certifi/python-

   certifi/security/advisories/GHSA-43fp-

   rhv2-5gv8https://groups.google.com/a/mozilla.org/g/dev-security-

   policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ

[1m   CVE-2022-23491[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/52365/f17[0m





[31m-> Vulnerability found in certifi version 2020.6.20

[0m[1m   Vulnerability ID: [0m59956

[1m   Affected spec: [0m>=2015.04.28,<2023.07.22

[1m   ADVISORY: [0mCertifi 2023.07.22 includes a fix for CVE-2023-37920:

   Certifi prior to version 2023.07.22 recognizes "e-Tugra" root certificates.

   e-Tugra's root certificates were subject to an investigation prompted by

   reporting of security issues in their systems. Certifi 2023.07.22 removes

   root certificates from "e-Tugra" from the root

   store.https://github.com/certifi/python-certifi/security/advisories/GHSA-

   xqr8-7jwr-rhp7

[1m   CVE-2023-37920[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/59956/f17[0m





[31m-> Vulnerability found in setuptools version 59.6.0

[0m[1m   Vulnerability ID: [0m52495

[1m   Affected spec: [0m<65.5.1

[1m   ADVISORY: [0mSetuptools 65.5.1 includes a fix for CVE-2022-40897: Python

   Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers

   to cause a denial of service via HTML in a crafted package or custom

   PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in

   package_index.py.https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-

   in-top-python-packages

[1m   CVE-2022-40897[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/52495/f17[0m





[31m-> Vulnerability found in pillow version 9.0.1

[0m[1m   Vulnerability ID: [0m51885

[1m   Affected spec: [0m<9.2.0

[1m   ADVISORY: [0mPillow before 9.2.0 performs Improper Handling of Highly

   Compressed GIF Data (Data Amplification).

[1m   CVE-2022-45198[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/51885/f17[0m





[31m-> Vulnerability found in protobuf version 3.12.4

[0m[1m   Vulnerability ID: [0m50474

[1m   Affected spec: [0m<3.15.0

[1m   ADVISORY: [0mProtobuf 3.15.0 includes a fix for CVE-2021-22570: Nullptr

   dereference when a null char is present in a proto symbol. The symbol is

   parsed incorrectly, leading to an unchecked call into the proto file's name

   during generation of the resulting error message. Since the symbol is

   incorrectly parsed, the file is nullptr.

[1m   CVE-2021-22570[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/50474/f17[0m





[31m-> Vulnerability found in protobuf version 3.12.4

[0m[1m   Vulnerability ID: [0m51167

[1m   Affected spec: [0m<3.18.3

[1m   ADVISORY: [0mProtobuf 3.18.3, 3.19.5, 3.20.2 and 4.21.6 include a fix

   for CVE-2022-1941: A parsing vulnerability for the MessageSet type in the

   ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2,

   3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and

   including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-

   python can lead to out of memory failures. A specially crafted message with

   multiple key-value per elements creates parsing issues, and can lead to a

   Denial of Service against services receiving unsanitized input.https://github

   .com/protocolbuffers/protobuf/security/advisories/GHSA-8gq9-2x98-w8hf

[1m   CVE-2022-1941[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/51167/f17[0m





[31m-> Vulnerability found in reportlab version 3.6.8

[0m[1m   Vulnerability ID: [0m60276

[1m   Affected spec: [0m<3.6.13

[1m   ADVISORY: [0mReportlab 3.6.13 includes a fix for a Remote Code Execution

   vulnerability via supplying a crafted PDF file.https://github.com/advisories/

   GHSA-9q9m-c65c-37pqhttps://github.com/c53elyas/CVE-2023-33733

[1m   CVE-2023-33733[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/60276/f17[0m





[31m-> Vulnerability found in cryptography version 3.4.8

[0m[1m   Vulnerability ID: [0m59473

[1m   Affected spec: [0m<41.0.2

[1m   ADVISORY: [0mThe cryptography package before 41.0.2 for Python

   mishandles SSH certificates that have critical options.

[1m   CVE-2023-38325[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/59473/f17[0m





[31m-> Vulnerability found in cryptography version 3.4.8

[0m[1m   Vulnerability ID: [0m53048

[1m   Affected spec: [0m>=1.8,<39.0.1

[1m   ADVISORY: [0mCryptography 39.0.1 includes a fix for CVE-2023-23931: In

   affected versions 'Cipher.update_into' would accept Python objects which

   implement the buffer protocol, but provide only immutable buffers. This would

   allow immutable objects (such as 'bytes') to be mutated, thus violating

   fundamental rules of Python and resulting in corrupted output. This issue has

   been present since 'update_into' was originally introduced in cryptography

   1.8.https://github.com/pyca/cryptography/security/advisories/GHSA-w7pp-m8wf-

   vj6r

[1m   CVE-2023-23931[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/53048/f17[0m





[31m-> Vulnerability found in oauthlib version 3.2.0

[0m[1m   Vulnerability ID: [0m50959

[1m   Affected spec: [0m>=3.1.1,<3.2.1

[1m   ADVISORY: [0mOAuthLib 3.2.1 includes a fix for CVE-2022-36087: In

   OAuthLib versions 3.1.1 until 3.2.1, an attacker providing malicious redirect

   uri can cause denial of service. An attacker can also leverage usage of

   'uri_validate' functions depending where it is used. OAuthLib applications

   using OAuth2.0 provider support or use directly 'uri_validate' are affected

   by this issue. There are no known workarounds.https://github.com/oauthlib/oau

   thlib/security/advisories/GHSA-3pgj-pg6c-r5p7

[1m   CVE-2022-36087[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/50959/f17[0m





[31m-> Vulnerability found in requests version 2.25.1

[0m[1m   Vulnerability ID: [0m58755

[1m   Affected spec: [0m>=2.3.0,<2.31.0

[1m   ADVISORY: [0mRequests 2.31.0 includes a fix for CVE-2023-32681: Since

   Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to

   destination servers when redirected to an HTTPS endpoint. This is a product

   of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header

   to requests. For HTTP connections sent through the tunnel, the proxy will

   identify the header in the request itself and remove it prior to forwarding

   to the destination server. However when sent over HTTPS, the 'Proxy-

   Authorization' header must be sent in the CONNECT request as the proxy has no

   visibility into the tunneled request. This results in Requests forwarding

   proxy credentials to the destination server unintentionally, allowing a

   malicious actor to potentially exfiltrate sensitive information.

[1m   CVE-2023-32681[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/58755/f17[0m





[31m-> Vulnerability found in pyjwt version 2.3.0

[0m[1m   Vulnerability ID: [0m48542

[1m   Affected spec: [0m>=1.5.0,<2.4.0

[1m   ADVISORY: [0mPyJWT 2.4.0 includes a fix for CVE-2022-29217: An attacker

   submitting the JWT token can choose the used signing algorithm. The PyJWT

   library requires that the application chooses what algorithms are supported.

   The application can specify 'jwt.algorithms.get_default_algorithms()' to get

   support for all algorithms, or specify a single algorithm. The issue is not

   that big as 'algorithms=jwt.algorithms.get_default_algorithms()' has to be

   used. As a workaround, always be explicit with the algorithms that are

   accepted and expected when decoding.

[1m   CVE-2022-29217[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/48542/f17[0m





[31m-> Vulnerability found in urllib3 version 1.26.5

[0m[1m   Vulnerability ID: [0m61601

[1m   Affected spec: [0m<1.26.17

[1m   ADVISORY: [0mUrllib3 1.26.17 and 2.0.5 include a fix for CVE-2023-43804:

   Urllib3 doesn't treat the 'Cookie' HTTP header special or provide any helpers

   for managing cookies over HTTP, that is the responsibility of the user.

   However, it is possible for a user to specify a 'Cookie' header and

   unknowingly leak information via HTTP redirects to a different origin if that

   user doesn't disable redirects explicitly.https://github.com/urllib3/urllib3/

   security/advisories/GHSA-v845-jxx5-vc9f

[1m   CVE-2023-43804[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/61601/f17[0m





[31m-> Vulnerability found in urllib3 version 1.26.5

[0m[1m   Vulnerability ID: [0m61893

[1m   Affected spec: [0m<1.26.18

[1m   ADVISORY: [0mUrllib3 1.26.18 and 2.0.7 include a fix for CVE-2023-45803:

   Request body not stripped after redirect from 303 status changes request

   method to GET.https://github.com/urllib3/urllib3/security/advisories/GHSA-

   g4mx-q9vg-27p4

[1m   CVE-2023-45803[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/61893/f17[0m





[31m-> Vulnerability found in mako version 1.1.3

[0m[1m   Vulnerability ID: [0m50870

[1m   Affected spec: [0m<1.2.2

[1m   ADVISORY: [0mMako before 1.2.2 is vulnerable to Regular expression

   Denial of Service when using the Lexer class to parse. This also affects

   babelplugin and linguaplugin.https://pyup.io/posts/pyup-discovers-redos-

   vulnerabilities-in-top-python-packages

[1m   CVE-2022-40023[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/50870/f17[0m





[31m-> Vulnerability found in wheel version 0.37.1

[0m[1m   Vulnerability ID: [0m51499

[1m   Affected spec: [0m<0.38.1

[1m   ADVISORY: [0mWheel 0.38.1 includes a fix for CVE-2022-40898: An issue

   discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier

   allows remote attackers to cause a denial of service via attacker controlled

   input to wheel cli.https://pyup.io/posts/pyup-discovers-redos-

   vulnerabilities-in-top-python-packages

[1m   CVE-2022-40898[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/51499/f17[0m





[31m-> Vulnerability found in future version 0.18.2

[0m[1m   Vulnerability ID: [0m52510

[1m   Affected spec: [0m<=0.18.2

[1m   ADVISORY: [0mFuture 0.18.2 and earlier allows remote attackers to cause

   a denial of service via crafted Set-Cookie header from malicious web

   server.https://github.com/PythonCharmers/python-future/blob/master/src/future

   /backports/http/cookiejar.py#L215https://github.com/python/cpython/pull/17157

[1m   CVE-2022-40899[0m

[1m   For more information, please visit

   [0mhttps://data.safetycli.com/v/52510/f17[0m



 Scan was completed. 17 vulnerabilities were found. 



+==============================================================================+

[32m[1m   REMEDIATIONS[0m



  17 vulnerabilities were found in 13 packages. For detailed remediation & fix 

  recommendations, upgrade to a commercial license. 



+==============================================================================+



[31m[22m  Safety is using PyUp's free open-source vulnerability database. This

data is 30 days old and limited. [0m

[31m  For real-time enhanced vulnerability data, fix recommendations, severity

reporting, cybersecurity support, team and project policy management and more

sign up at https://pyup.io or email sales@pyup.io[0m



+==============================================================================+[0m